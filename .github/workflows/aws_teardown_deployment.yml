name: Teardown HydroServer AWS Cloud Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Enter a deployment environment name.'
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  teardown-deployment:
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ./terraform/aws
    steps:
      - name: configureawscredentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_IAM_ROLE }}
          role-session-name: destroy-hydroserver-resources
          aws-region: ${{ vars.AWS_REGION }}
    
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ vars.TERRAFORM_BUCKET }}" -backend-config="region=${{ vars.AWS_REGION }}" -backend-config="key=aws_application_${{ github.event.inputs.environment }}"

      - name: Terraform Plan Destroy
        id: plan_destroy
        run: terraform plan -destroy -no-color -var instance="${{ github.event.inputs.environment }}" -var region="${{ vars.AWS_REGION }}"
        continue-on-error: true

      - name: Terraform Plan Destroy Status
        if: steps.plan_destroy.outcome == 'failure'
        run: exit 1

      - name: Empty hydroserver-web S3 bucket
        run: |
          aws s3 rm s3://hydroserver-web-${{ github.event.inputs.environment }}-${{ vars.AWS_ACCOUNT_ID }} --recursive
        continue-on-error: true

      - name: Empty hydroserver-storage S3 bucket
        run: |
          aws s3 rm s3://hydroserver-storage-${{ github.event.inputs.environment }}-${{ vars.AWS_ACCOUNT_ID }} --recursive
        continue-on-error: true

      - name: Empty hydroserver-django S3 bucket
        run: |
          aws s3 rm s3://hydroserver-django-${{ github.event.inputs.environment }}-${{ vars.AWS_ACCOUNT_ID }} --recursive
        continue-on-error: true

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var instance="${{ github.event.inputs.environment }}" -var region="${{ vars.AWS_REGION }}"
